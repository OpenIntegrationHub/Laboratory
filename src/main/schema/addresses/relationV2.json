{
  "$schema": "http://json-schema.org/schema#",
  "$id": "https://github.com/philecs/philecs/blob/master/OIHMasterDataModelAddressesRelation.json",
  "title": "Relationship",
  "description": "Describes the relationship between a person and an organization",
  "type": "object",
  "allOf": [
    {
      "$ref": "https://github.com/philecs/philecs/blob/master/oih-data-record.json"
    }
  ],
  "anyOf": [
    {
      "$ref": "#/definitions/PersonToOrganizationRelationship"
    },
    {
      "$ref": "#/definitions/PersonToPersonRelationship"
    },
    {
      "$ref": "#/definitions/OrganizationToOrganizationRelationship"
    }
  ],
  "definitions":{
    "PersonToOrganizationRelationship":{
      "type": "object",
      "description": "Describes the relationship between a person and an organization",
      "properties": {
        "function": {
          "type": "string",
          "description": "Function of the person within the organization",
          "examples": [
            "Software architect"
          ]
        },
        "department": {
          "type": "string",
          "description": "Department the person works at",
          "examples": [
            "sales"
          ]
        },
        "organizationUId": {
          "type": "string",
          "description": "Unique identifier of the organization"
        },
        "personUId": {
          "type": "string",
          "description": "Unique identifier of the person"
        }
      }
    },
    "PersonToPersonRelationship": {
      "type": "object",
      "description": "Describes the relationship between two persons",
      "properties": {
        "personUId": {
          "type": "string",
          "description": "Unique identifier of the first person"
        },
        "personUId2": {
          "type": "string",
          "description": "Unique identifier of the second person"
        }
      }
    },
    "OrganizationToOrganizationRelationship": {
      "type": "object",
      "description": "Describes the relationship between two organizations",
      "properties": {
        "organizationUId": {
          "type": "string",
          "description": "Unique identifier of the first organization"
        },
        "organizationUId2": {
          "type": "string",
          "description": "Unique identifier of the second organization"
        }
      }
    }
  },
  "properties": {
    "relationUId": {
      "type": "string",
      "description": "Unique identifier of the relation"
    },
    "relationshipType": {
      "type": "string",
      "description": "Describes the type of relationship",
      "examples": [
        "employee",
        "founder"
      ]
    }
  }
}
